<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAHBVJREFUeF7tnXuQHVWdx6UUKHR5qggCImjcEhDYcmvV/WdheQQiIrWWtYKKYG1F
        3hYLJJnp7mkeRbmlAouui/4BARe0imILMaBCUiIm87h9+k4gBkhCcA2GN1Yl0SRz+zTd+/31HBCSM5PM
        3H7d299v1afmdafP6fM7v1+f0+f1DoqiKIqiKIqiKIqiKIqiKIqiKIqiKKo3lKZ7+KvTva56PHmPvzI9
        YFEree/AePJ+//HkYL+VHjKokkMHR7YeloHv5XfyN/mMfFb+J/tfXEOuZa5KUVQd5Ifpu/2R5KDMgVud
        EwcDfaYbdL7uhdHVbqBv8EL9PTfUP/bC+AHwqKviMdD2VLzKVfppT+n1joo2CPL95O/kb3HbDeIx+Z/J
        /9V3ZdfKrinXRhpIy5c0V249TPIgeTHZoigqT12+LtlbnshuMPG34nhw2MvhrLe4YXwfHHQYTv4sHPgV
        OOkWfI3wu7RQsjSytF7J0s7yEN8nefJUdJnT1mf4rYmPSZ4l7+Y2KIrapdDUXhim+7vjE3PgXOc4YTQE
        R7sHTtaCgz1vHC95m0PWCOTxdcljltcgbkne0aLw5F7knvyxZD9zpxRFicQpBtqd491W5wIn1DfDYZbB
        iZ6DE221OVkvMnkvck/xMgSDm4ZU/DW5ZwYEqnGSl2qo+IfDKebBGW5wJp3ixcmmtd2B+g65V6VfwPdL
        nUBfL+8vBkeSw7IXjhTVb5KK7ajkI/LkQ8VfDJ5CAPjzTo7RUKQswJNSNmglnC9lNT9M9zTFR1G9J//R
        9F3OWHKU246/gif8najc8qa9Y3MA8lekjMAzEgyGwvjLUoZSlqZYKarekrffqLyfRSX+Eb6uAxO2ik52
        A5QdgudaN9A/RHnOkyFHU8wUVR9JE38g6BznhtE1aML+Nntbb6vQpAtkdCF+zJG5CK3OsXxfQFWua1Yk
        +zotfYY0V/GEkgk1tR2i6xtQxlLW4A4EhbliA2MOiipH/nByMJ5G54EHUQk3WSsqKQGUvYqXiC1kCrMx
        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
        d/w/tAUdeOZatUoAAAAASUVORK5CYII=
</value>
  </data>
</root>